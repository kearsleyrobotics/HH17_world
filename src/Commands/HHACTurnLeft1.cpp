// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "HHACTurnLeft1.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

HHACTurnLeft1::HHACTurnLeft1(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::hHBaseDrive.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void HHACTurnLeft1::Initialize() {
	SetTimeout(2.0);
	hHDegPast = false;
}

// Called repeatedly when this Command is scheduled to run
void HHACTurnLeft1::Execute() {
	//Robot::hHBaseDrive->hHTankDrive(-0.65,0.65);
	double hHAngle = (Robot::hHBaseDrive->hHGBaseDrive->GetAngle());

	if (hHAngle <= -30)
	{
		hHPower = 0.45;
	}
	else
	{
		hHPower = 0.65;
	}

	frc::SmartDashboard::PutNumber("Gyro angle", hHAngle);

	if (hHAngle>= -60)
	{
		Robot::hHBaseDrive->hHTankDrive(-hHPower,hHPower);
	}
	else
	{
		hHDegPast = true;
		Robot::hHBaseDrive->hHTankDrive(0.0,0.0);
	}

}

// Make this return true when this Command no longer needs to run execute()
bool HHACTurnLeft1::IsFinished() {
	return (hHDegPast || IsTimedOut());
}

// Called once after isFinished returns true
void HHACTurnLeft1::End() {
	Robot::hHBaseDrive->hHTankDrive(0.0,0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void HHACTurnLeft1::Interrupted() {
	End();
}
