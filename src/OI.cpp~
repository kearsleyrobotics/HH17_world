// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/HHACBaseLineCross.h"
#include "Commands/HHACDS2WallToLiftStraight.h"
#include "Commands/HHACDSBaseLineCross.h"
#include "Commands/HHACDSBaseLineCrossTurnLeftTimeInputDriveToLift.h"
#include "Commands/HHACDSBaseLineCrossTurnRightTimeInputDriveToLift.h"
#include "Commands/HHACDoNothing.h"
#include "Commands/HHACDriveDistFast.h"
#include "Commands/HHACDriveDistFastTurnLeft1DriveDistSlow.h"
#include "Commands/HHACDriveDistFastTurnRight1DriveDistSlow.h"
#include "Commands/HHACDriveDistSlow.h"
#include "Commands/HHACDriveToLift.h"
#include "Commands/HHACDriveWaitInput.h"
#include "Commands/HHACTurnLeft1.h"
#include "Commands/HHACTurnLeftTimeInput.h"
#include "Commands/HHACTurnRight1.h"
#include "Commands/HHACTurnRightTimeInput.h"
#include "Commands/HHBlank.h"
#include "Commands/HHButtonDriveBackwards.h"
#include "Commands/HHGearReleaseClose.h"
#include "Commands/HHGearReleaseOpen.h"
#include "Commands/HHRobotControl.h"
#include "Commands/HHRopeClimbDown.h"
#include "Commands/HHRopeClimbJoy.h"
#include "Commands/HHRopeClimbUp.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    hHControler2.reset(new Joystick(2));
    
    hHC2Button2.reset(new JoystickButton(hHControler2.get(), 2));
    hHC2Button2->WhileHeld(new HHBlank());
    hHC2Button1.reset(new JoystickButton(hHControler2.get(), 1));
    hHC2Button1->WhileHeld(new HHRopeClimbUp());
    hHControler1.reset(new Joystick(1));
    
    hHControler0.reset(new Joystick(0));
    
    hHC0Button6.reset(new JoystickButton(hHControler0.get(), 6));
    hHC0Button6->WhileHeld(new HHBlank());
    hHC0Button1.reset(new JoystickButton(hHControler0.get(), 1));
    hHC0Button1->WhileHeld(new HHBlank());

    // SmartDashboard Buttons

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getHHControler0() {
   return hHControler0;
}

std::shared_ptr<Joystick> OI::getHHControler1() {
   return hHControler1;
}

std::shared_ptr<Joystick> OI::getHHControler2() {
   return hHControler2;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
